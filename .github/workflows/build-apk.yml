name: build-apk
env:
  ANDROID_SDK_TOOLS: "8092744"
  ANDROID_CMAKE: "3.10.2.4988404"
on:
  push:
    branches:
      - master
    paths:
      - apps/**
      - '!**.aab'
      - '!**.apk'
jobs:
  build-apk-job:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v19
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
            if [[ "$file" == "apps/"* ]]; then
              echo "found app=$file"
              APP_NAME=$(echo "$file" | sed -e 's/apps\///g' | sed -e 's/\/.*//g')
              echo "APP_NAME=$APP_NAME"
            fi
          done
          if [ -z ${APP_NAME+x} ]; then 
            echo "APP_NAME not found"
            exit 1
          fi
          echo "APP_NAME=$(echo $APP_NAME)" >> $GITHUB_ENV
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'      
      - name: github.run_attempt
        run: echo ${{ github.run_attempt }}
      - name: github.sha
        run: echo ${{ github.sha }}
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm i -g @bubblewrap/cli
      - run: mkdir ~/tools && cd ~/tools && npm init -y && npm i bw_manifest_url
      - run: mkdir ~/.bubblewrap
      - run: echo '{"jdkPath":"'$JAVA_HOME'","androidSdkPath":"/usr/local/lib/android/sdk"}' > ~/.bubblewrap/config.json
      - run: node ~/tools/node_modules/bw_manifest_url/init.js "https://gcode.com.au/apps/$APP_NAME/manifest.json"
      - name: move to apps/apk dir # Move the generated files into output folder
        run: |
          MANIFEST_URL="https://gcode.com.au/apps/$APP_NAME/manifest.json"
          echo "$MANIFEST_URL"
          echo "APP_NAME $APP_NAME"
          mkdir -p apps/$APP_NAME/apk
          rm -f apps/$APP_NAME/apk/*
          cp -rf ./app-release-signed.apk ./apps/$APP_NAME/apk/
          cp -rf ./app-release-bundle.aab ./apps/$APP_NAME/apk/       
          git config --local user.email "craig@gormantec.com"
          git config --local user.name "gormantec"
          git add ./apps/$APP_NAME/apk
          git commit -m "Add changes"

      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          branch: master #ignore if your branch is master
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
